@model PaginatedList<EventsPlus.Models.Organizer>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
<!-- Creates the view for the Index page -->

<h1>Index</h1>

<!-- Adds the search box and utilizes the filter for the data in the table-->
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Search: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a class="btn btn-primary btn-sm" asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<p>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
</p>

<!-- Creates a responsive table with headers and utilizes the filtering logic specified in the controller -->
<table class="table table-responsive">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["EvId"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Organizer Id</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["OrgLNam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Organizer Last Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["Org_F_Nam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Organizer First Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["Org_C_Num"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Organizer Contact Number</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["Org_E_Add"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Organizer Email Address</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <!-- Adds data to each column of the table -->
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrganizerLastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrganizerFirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrganizerContactNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrganizerEmailAddress)
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a class="btn btn-primary" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Utilizes the pagination logic and creates buttons to navigate through pages -->

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>


